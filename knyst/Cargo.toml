[package]
name = "knyst"
version = "0.5.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "Real time dynamic audio graph and synthesis library"
readme = "../README.md"
keywords = ["audio", "synthesis", "music", "dsp", "sound"]
categories = ["multimedia::audio"]
authors = ["Erik Natanael Gustafsson <code@eriknatanael.com>"]
repository = "https://github.com/ErikNatanael/knyst"
homepage = "https://github.com/ErikNatanael/knyst"

[package.metadata.docs.rs]
features = ["jack", "cpal", "serde-derive"]

[features]
serde-derive = ["dep:serde"]
debug-warn-on-alloc = ["assert_no_alloc/warn_debug"]
default = ["cpal", "jack", "assert_no_alloc"]
unstable = []

[dependencies]
knyst_macro = "0.5.0"
slotmap = "1.0"
# For ergonomic error handling
thiserror = "1.0"
# For real time safe communication between threads
rtrb = "0.3"
fastrand = "2.0.1"
# Fast approximation of common float math. Probably under BSD-3.
fastapprox = "0.3"
# Downcast used to have any user data in the Resources struct
downcast-rs = "1.2.0"
# JACK audio backend
jack = { version = "0.11", optional = true }
# CPAL audio backend
cpal = { version = "0.15", optional = true }
# Only for non real time use channels
crossbeam-channel = "0.5.6"
# Loading audio buffers
symphonia = { version = "0.5.1", features = ["mp3"] }
# Saving to wav
hound = "3.5.1"
serde = { version = "1.0", features = ["derive"], optional = true }
assert_no_alloc = { version = "1.1.2", optional = true }
num-traits = "0.2.17"
itertools = "0.12.0"

# For concurrency testing
[target.'cfg(loom)'.dependencies]
loom = { version = "0.7", features = ["checkpoint"] }

[dev-dependencies]
rand = "0.8"
criterion = "0.5"
anyhow = "1.0"
dialog = "0.3"
rfd = "0.12"
tokio = { version = "1.26.0", features = [
  "rt",
  "time",
  "macros",
  "rt-multi-thread",
] }
trybuild = { version = "1.0", features = ["diff"] }

[target.'cfg(unix)'.dev-dependencies]
termion = "2.0.3"

# [[bench]]
# name = "micro_benchmarks"
# harness = false


[[test]]
name = "macro_tests"
path = "macro_tests/macro_tests_main.rs"

[[bench]]
name = "large_sine_graph"
harness = false

# Basic examples
[[example]]
name = "tone"
path = "examples/basic/tone.rs"
required-features = ["cpal"]

[[example]]
name = "tones"
path = "examples/basic/tones.rs"
required-features = ["cpal"]

[[example]]
name = "modulation"
path = "examples/basic/modulation.rs"
required-features = ["cpal"]

[[example]]
name = "adjust_frequency"
path = "examples/basic/adjust_frequency.rs"
required-features = ["cpal"]

[[example]]
name = "sound_file_playback"
path = "examples/basic/sound_file_playback.rs"
required-features = ["cpal"]

# Envelope examples
[[example]]
name = "volume_envelope"
path = "examples/envelopes/volume_envelope.rs"
required-features = ["cpal"]

[[example]]
name = "frequency_envelope"
path = "examples/envelopes/frequency_envelope.rs"
required-features = ["cpal"]

# Advanced examples
[[example]]
name = "beat_callbacks"
path = "examples/beat_callbacks.rs"
required-features = ["cpal"]

[[example]]
name = "more_advanced_example"
path = "examples/more_advanced_example.rs"
required-features = ["cpal"]

[[example]]
name = "interactive"
path = "examples/interactive.rs"
required-features = ["cpal"]

[[example]]
name = "write_your_own_gen"
path = "examples/write_your_own_gen.rs"
required-features = ["cpal"]
